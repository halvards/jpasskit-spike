apply plugin: 'application'                  // http://www.gradle.org/docs/current/userguide/application_plugin.html
apply plugin: 'java'                         // http://www.gradle.org/docs/current/userguide/java_plugin.html

def javaVersion = '1.8'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

mainClassName = 'com.skogsrud.halvard.jpasskit.spike.Main'
group = 'com.skogsrud.halvard'
version = '1.0.0'

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

repositories {
    mavenCentral()
}

configurations {
    all*.exclude group: 'com.notnoop.apns'             // No need for push notifications
    all*.exclude group: 'commons-logging'              // Use SLF4J instead
    all*.exclude group: 'log4j'                        // Use SLF4J instead
    all*.exclude group: 'org.apache.logging.log4j'     // Use SLF4J instead
}

def alpnApiVersion = '1.1.2.v20150522'
def commonsCodecVersion = '1.10'
def commonsIoVersion = '2.4'
def commonsLang3Version = '3.4'
def hamcrestVersion = '1.3'
def jacksonVersion = '2.7.4'
def jpasskitVersion = '0.0.8'
def junitVersion = '4.12'
def nettyTcnativeVersion = '1.1.33.Fork16'
def okhttp3Version = '3.2.0'
def pushyVersion = '0.7.2'
def slf4jVersion = '1.7.21'
def sparkCoreVersion = '2.5'
def sparkTemplateMustacheVersion = '2.3'
def userAgentUtilsVersion = '1.19'
def zxingVersion = '3.2.1'

dependencies {
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.google.zxing:javase:${zxingVersion}",
            "com.relayrides:pushy:${pushyVersion}",
            "com.sparkjava:spark-core:${sparkCoreVersion}",
            "com.sparkjava:spark-template-mustache:${sparkTemplateMustacheVersion}",
            "com.squareup.okhttp3:okhttp:${okhttp3Version}",
            "commons-codec:commons-codec:${commonsCodecVersion}",
            "commons-io:commons-io:${commonsIoVersion}",
            "de.brendamour:jpasskit:${jpasskitVersion}",
            "eu.bitwalker:UserAgentUtils:${userAgentUtilsVersion}",
            "io.netty:netty-tcnative-boringssl-static:${nettyTcnativeVersion}",
            "org.apache.commons:commons-lang3:${commonsLang3Version}",
            "org.eclipse.jetty.alpn:alpn-api:${alpnApiVersion}",
            "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
            "org.slf4j:log4j-over-slf4j:${slf4jVersion}",
            "org.slf4j:slf4j-api:${slf4jVersion}",
            "org.slf4j:slf4j-simple:${slf4jVersion}"

    testCompile "junit:junit:${junitVersion}",
            "org.hamcrest:hamcrest-library:${hamcrestVersion}"
}

task onejar(type: Jar,
            description: 'Create an all-in-one executable JAR file.',
            group: 'Build') {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

assemble.shouldRunAfter clean
task stage(dependsOn: ['clean', 'assemble'],
        description: 'Heroku uses this task to build the app.',
        group: 'Build')

task wrapper(type: Wrapper,
        description: 'Create Gradle wrapper scripts.',
        group: 'Build Setup') {
    gradleVersion = '2.9'
}
